buildscript {
    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:1.2.3"
        classpath 'org.robolectric:robolectric-gradle-plugin:1.1.0'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.1'

    }
}

allprojects {
    repositories {
        flatDir {
            dirs 'aars'
        }
    }
}

apply plugin: 'com.android.application'
//apply plugin: 'robolectric'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

android {
    compileSdkVersion 22
    buildToolsVersion "26.0.1"

    defaultConfig {
        applicationId "org.smartregister.deviceinterface.sample"
        minSdkVersion 18
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
    }

    dexOptions {
        incremental = true
        preDexLibraries = false
        javaMaxHeapSize "4g"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'LICENSE.txt'
    }

    lintOptions {
        checkReleaseBuilds false
        disable 'MissingTranslation'
        checkReleaseBuilds false
        abortOnError false
    }
}

allprojects {
    repositories {
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        mavenLocal()
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    testCompile('org.robolectric:robolectric:3.4') {

        exclude group: 'com.google.guava', module: 'guava'
        exclude group: 'org.apache.maven', module: 'maven-model'
        exclude group: 'org.apache.maven', module: 'maven-ant-tasks'
        exclude group: 'com.android.support'
        exclude group: 'com.thoughtworks.xstream', module: '0cxstream'
    }
    testCompile('org.robolectric:shadows-multidex:3.4-rc2') {
        exclude group: 'com.google.guava', module: 'guava'
    }
    testCompile 'org.apache.maven:maven-ant-tasks:2.1.3'

    compile('org.smartregister:opensrp-client-core:1.1.1-SNAPSHOT@aar') {
        transitive = true
        exclude group: 'com.github.bmelnychuk', module: 'atv'
    }
    compile project(':opensrp-deviceinterface')
    //compile(name: 'opensrp-device-interface-debug', ext: 'aar')
    compile 'com.android.support:design:22.2.1'
    compile 'com.android.support:appcompat-v7:22.1.1'
    compile 'com.android.support:cardview-v7:22.2.1'
    // opensrp-growth-monitoring dependencies -- TO REMOVE
    compile 'org.apache.commons:commons-csv:1.4'
    compile 'com.google.code.gson:gson:2.3'
    compile 'com.mcxiaoke.volley:library:1.0.+'
    compile 'com.github.lecho:hellocharts-android:v1.5.8'
    // opensrp-app dependencies -- TO REMOVE
    compile 'net.zetetic:android-database-sqlcipher:3.5.6@aar'
    compile 'joda-time:joda-time:2.3'
    compile 'com.github.johnkil.print:print:1.2.3'
    compile 'org.apache.commons:commons-lang3:3.2'

}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    getReports().getXml().setDestination(file("${buildDir}/reports/jacoco/jacocoRootReport/merged.xml"))
    getReports().getHtml().setDestination(file("${buildDir}/reports/jacoco/jacocoRootReport/html"))

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*', '**/*$ViewBinder*.*']
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ])
}

coveralls {
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/merged.xml"
}

tasks.coveralls {
    dependsOn 'connectedAndroidTest'
    onlyIf { System.env.'CI' }
}
